- name: Create Azure VM Kubernetes Cluster
  hosts: localhost
  connection: local
  tasks:
  - name: Create resource group
    azure_rm_resourcegroup:
      name: A2S2_groep_04
      location: westeurope

  - name: Create virtual network
    azure_rm_virtualnetwork:
      resource_group: A2S2_groep_04
      name: KubeVnet
      address_prefixes: "10.0.0.0/16"

  - name: Add subnet
    azure_rm_subnet:
      resource_group: A2S2_groep_04
      name: KubeSubnet
      address_prefix: "10.0.1.0/24"
      virtual_network: KubeVnet

  - name: Create public IP for KubeMaster
    azure_rm_publicipaddress:
      resource_group: A2S2_groep_04
      allocation_method: Static
      name: KubeMasterPublicIP
    register: kube_master_ip

  - name: Create public IP for KubeWorker
    azure_rm_publicipaddress:
      resource_group: A2S2_groep_04
      allocation_method: Static
      name: KubeWorkerPublicIP
    register: kube_worker_ip

  - name: Create Network Security Group for KubeMaster
    azure_rm_securitygroup:
      resource_group: A2S2_groep_04
      name: KubeMasterNSG
      rules:
        - name: SSH
          protocol: Tcp
          destination_port_range: 22
          access: Allow
          priority: 1001
          direction: Inbound
        - name: Kubernetes API
          protocol: Tcp
          destination_port_range: 6443
          access: Allow
          priority: 1002
          direction: Inbound

  - name: Create Network Security Group for KubeWorker
    azure_rm_securitygroup:
      resource_group: A2S2_groep_04
      name: KubeWorkerNSG
      rules:
        - name: SSH
          protocol: Tcp
          destination_port_range: 22
          access: Allow
          priority: 1001
          direction: Inbound

  - name: Create virtual network interface for KubeMaster
    azure_rm_networkinterface:
      resource_group: A2S2_groep_04
      name: KubeMasterNIC
      virtual_network: KubeVnet
      subnet: KubeSubnet
      security_group: KubeMasterNSG
      ip_forwarding: true
      ip_configurations:
        - name: KubeMasterNICConfig
          public_ip_address_name: KubeMasterPublicIP
          primary: true

  - name: Create virtual network interface for KubeWorker
    azure_rm_networkinterface:
      resource_group: A2S2_groep_04
      name: KubeWorkerNIC
      virtual_network: KubeVnet
      subnet: KubeSubnet
      security_group: KubeWorkerNSG
      ip_forwarding: true
      ip_configurations:
        - name: KubeWorkerNICConfig
          public_ip_address_name: KubeWorkerPublicIP
          primary: true

- name: Create KubeMaster VM and Deploy Applications
  azure_rm_virtualmachine:
    resource_group: A2S2_groep_04
    name: KubeMaster
    vm_size: Standard_B2ms
    admin_username: groep04_admin
    ssh_password_enabled: false
    ssh_public_keys:
      - path: /home/groep04_admin/.ssh/authorized_keys
# hier moet nog key worden angepast
        key_data: "ssh-rsa YOUR_PUBLIC_KEY"
    network_interfaces: KubeMasterNIC
    managed_disk_type: Standard_LRS
    image:
      offer: 0001-com-ubuntu-server-jammy
      publisher: Canonical
      sku: 22_04-lts
      version: latest
    custom_data: |
      #cloud-config
      package_update: true
      package_upgrade: true
      packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - kubeadm
        - kubectl
        - kubelet
      runcmd:
        - kubeadm init --pod-network-cidr=10.244.0.0/16
        - mkdir -p /home/groep04_admin/.kube
        - cp -i /etc/kubernetes/admin.conf /home/groep04_admin/.kube/config
        - chown -R groep04_admin:groep04_admin /home/groep04_admin/.kube
        - kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
        - kubectl create deployment nginx --image=nginx
        - kubectl expose deployment nginx --port=80 --target-port=80 --type=ClusterIP
        - kubectl create deployment mariadb --image=mariadb
        - kubectl expose deployment mariadb --port=3306 --target-port=3306 --type=ClusterIP
# hier moet nog root wachtwoord worden angepast
        - kubectl set env deployment/mariadb MYSQL_ROOT_PASSWORD=root


  - name: Fetch join command from KubeMaster
    shell: cat /root/kube_join_command.sh
    register: kube_join_command
    delegate_to: KubeMaster

  - name: Create KubeWorker VM and Join Kubernetes Cluster
    azure_rm_virtualmachine:
      resource_group: A2S2_groep_04
      name: KubeWorker
      vm_size: Standard_B2ms
      admin_username: groep04_admin
      ssh_password_enabled: false
      ssh_public_keys:
        - path: /home/groep04_admin/.ssh/authorized_keys
# hier moet nog key worden angepast
          key_data: "ssh-rsa YOUR_PUBLIC_KEY"
      network_interfaces: KubeWorkerNIC
      managed_disk_type: Standard_LRS
      image:
        offer: 0001-com-ubuntu-server-jammy
        publisher: Canonical
        sku: 22_04-lts
        version: latest
      custom_data: |
        #cloud-config
        package_update: true
        package_upgrade: true
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - kubeadm
          - kubectl
          - kubelet
        runcmd:
          - "{{ kube_join_command.stdout }}"

  - name: Install Flannel Network Plugin
    shell: |
      kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    delegate_to: KubeMaster
